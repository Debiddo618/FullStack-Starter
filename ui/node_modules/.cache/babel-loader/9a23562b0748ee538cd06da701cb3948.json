{"ast":null,"code":"import axios from 'axios';\nimport { createAction, handleActions } from 'redux-actions';\nconst actions = {\n  INVENTORY_GET_ALL: 'inventory/get_all',\n  INVENTORY_GET_ALL_PENDING: 'inventory/get_all_PENDING',\n  INVENTORY_UPDATE_PENDING: 'inventory/update_PENDING',\n  INVENTORY_SAVE_PENDING: 'inventory/save_PENDING',\n  INVENTORY_DELETE_PENDING: 'inventory/delete_PENDING',\n  INVENTORY_UPDATE: 'inventory/update',\n  INVENTORY_SAVE: 'inventory/save',\n  INVENTORY_DELETE: 'inventory/delete',\n  INVENTORY_REFRESH: 'inventory/refresh'\n};\nexport let defaultState = {\n  all: []\n}; //GET\n\nexport const findInventory = createAction(actions.INVENTORY_GET_ALL, () => {\n  return (dispatch, getState, config) => axios.get(`${config.restAPIUrl}/inventory`).then(suc => dispatch(refreshInventory(suc.data)));\n}); //POST\n\nexport const saveInventory = createAction(actions.INVENTORY_SAVE, inventory => async (dispatch, getState, config) => await axios.post(`${config.restAPIUrl}/inventory`, inventory).then(suc => {\n  const invs = [];\n  getState().inventory.all.forEach(inv => {\n    if (inv.id !== suc.data.id) {\n      invs.push(inv);\n    }\n  });\n  invs.push(suc.data);\n  dispatch(refreshInventory(invs));\n})); //delete\n\nexport const removeInventory = createAction(actions.INVENTORY_DELETE, ids => (dispatch, getState, config) => axios.delete(`${config.restAPIUrl}/inventory`, {\n  data: ids\n}).then(suc => {\n  const invs = [];\n  getState().inventory.all.forEach(inv => {\n    if (!ids.includes(inv.id)) {\n      invs.push(inv);\n    }\n  });\n  dispatch(refreshInventory(invs));\n})); //update\n\nexport const updateInventory = createAction(actions.INVENTORY_UPDATE, (ids, inventory) => async (dispatch, getState, config) => await axios.put(`${config.restAPIUrl}/inventory/${ids}`, inventory).then(suc => {\n  const invs = [];\n  getState().inventory.all.forEach(inv => {\n    if (inventory.id !== inv.id) {\n      invs.push(inv);\n    } else {\n      inv = { ...inventory\n      };\n      invs.push(inv);\n    }\n  });\n  dispatch(refreshInventory(invs));\n})); //REFRESH\n\nexport const refreshInventory = createAction(actions.INVENTORY_REFRESH, payload => payload.sort((inventoryA, inventoryB) => inventoryA.name < inventoryB.name ? -1 : inventoryA.name > inventoryB.name ? 1 : 0));\nexport default handleActions({\n  //TODO\n  [actions.INVENTORY_GET_ALL_PENDING]: state => ({ ...state\n  }),\n  [actions.INVENTORY_REFRESH]: (state, action) => ({ ...state,\n    all: action.payload\n  }),\n  [actions.INVENTORY_SAVE]: (state, action) => ({ ...state,\n    all: [...state.all]\n  }),\n  [actions.INVENTORY_DELETE]: (state, action) => ({ ...state,\n    all: state.all.filter(inv => inv.id !== action.payload.ids)\n  }),\n  [actions.INVENTORY_UPDATE]: (state, action) => ({ ...state,\n    all: state.all.map(inv => {\n      if (inv.id === action.payload.ids) {\n        return { ...inv,\n          ...action.payload.inventory\n        };\n      } else {\n        return inv;\n      }\n    })\n  })\n}, defaultState);","map":{"version":3,"names":["axios","createAction","handleActions","actions","INVENTORY_GET_ALL","INVENTORY_GET_ALL_PENDING","INVENTORY_UPDATE_PENDING","INVENTORY_SAVE_PENDING","INVENTORY_DELETE_PENDING","INVENTORY_UPDATE","INVENTORY_SAVE","INVENTORY_DELETE","INVENTORY_REFRESH","defaultState","all","findInventory","dispatch","getState","config","get","restAPIUrl","then","suc","refreshInventory","data","saveInventory","inventory","post","invs","forEach","inv","id","push","removeInventory","ids","delete","includes","updateInventory","put","payload","sort","inventoryA","inventoryB","name","state","action","filter","map"],"sources":["/home/David/fullstack-starter/ui/src/ducks/inventory/index.js"],"sourcesContent":["import axios from 'axios'\nimport { createAction, handleActions } from 'redux-actions'\n\nconst actions = {\n  INVENTORY_GET_ALL: 'inventory/get_all',\n  INVENTORY_GET_ALL_PENDING: 'inventory/get_all_PENDING',\n  INVENTORY_UPDATE_PENDING: 'inventory/update_PENDING',\n  INVENTORY_SAVE_PENDING: 'inventory/save_PENDING',\n  INVENTORY_DELETE_PENDING: 'inventory/delete_PENDING',\n  INVENTORY_UPDATE: 'inventory/update',\n  INVENTORY_SAVE: 'inventory/save',\n  INVENTORY_DELETE: 'inventory/delete',\n  INVENTORY_REFRESH: 'inventory/refresh'\n}\n\nexport let defaultState = {\n  all: []\n}\n\n//GET\nexport const findInventory = createAction(actions.INVENTORY_GET_ALL, () => {\n  return (dispatch, getState, config) => axios\n    .get(`${config.restAPIUrl}/inventory`)\n    .then((suc) => dispatch(refreshInventory(suc.data)))\n})\n\n//POST\nexport const saveInventory = createAction(actions.INVENTORY_SAVE, (inventory) =>\n  async (dispatch, getState, config) => await axios\n    .post(`${config.restAPIUrl}/inventory`, inventory)\n    .then((suc) => {\n      const invs = []\n      getState().inventory.all.forEach(inv => {\n        if (inv.id !== suc.data.id) {\n          invs.push(inv)\n        }\n      })\n      invs.push(suc.data)\n      dispatch(refreshInventory(invs))\n    })\n)\n\n//delete\nexport const removeInventory = createAction(actions.INVENTORY_DELETE, (ids) =>\n  (dispatch, getState, config) => axios\n    .delete(`${config.restAPIUrl}/inventory`, { data: ids })\n    .then((suc) => {\n      const invs = []\n      getState().inventory.all.forEach(inv => {\n        if (!ids.includes(inv.id)) {\n          invs.push(inv)\n        }\n      })\n      dispatch(refreshInventory(invs))\n    })\n)\n\n//update\nexport const updateInventory = createAction(actions.INVENTORY_UPDATE, (ids, inventory) =>\n  async (dispatch, getState, config) => await axios\n    .put(`${config.restAPIUrl}/inventory/${ids}`, inventory)\n    .then((suc) => {\n      const invs = []\n      getState().inventory.all.forEach(inv => {\n        if (inventory.id !== inv.id) {\n          invs.push(inv)\n        } else {\n          inv = { ...inventory };\n          invs.push(inv)\n        }\n      })\n      dispatch(refreshInventory(invs))\n    })\n)\n\n\n//REFRESH\nexport const refreshInventory = createAction(actions.INVENTORY_REFRESH, (payload) =>\n  payload.sort((inventoryA, inventoryB) => inventoryA.name < inventoryB.name ? -1 : inventoryA.name > inventoryB.name ? 1 : 0)\n)\n\nexport default handleActions({\n  //TODO\n  [actions.INVENTORY_GET_ALL_PENDING]: (state) => ({\n    ...state\n  }),\n  [actions.INVENTORY_REFRESH]: (state, action) => ({\n    ...state,\n    all: action.payload,\n  }),\n  [actions.INVENTORY_SAVE]: (state, action) =>\n  ({\n    ...state,\n    all: [...state.all],\n  }),\n  [actions.INVENTORY_DELETE]: (state, action) => ({\n    ...state,\n    all: state.all.filter(inv => inv.id !== action.payload.ids),\n  }),\n  [actions.INVENTORY_UPDATE]: (state, action) => ({\n    ...state,\n    all: state.all.map((inv) => {\n      if (inv.id === action.payload.ids) {\n        return {\n          ...inv,\n          ...action.payload.inventory\n        };\n      } else {\n        return inv;\n      }\n    }),\n  }),\n}, defaultState)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}